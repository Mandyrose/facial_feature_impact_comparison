[DATASET]
filters = []
image_size = 256
net_input_size = 224
post_crop_im_size = 224
dataset_means = [0.5, 0.5, 0.5]
dataset_stds = [0.5, 0.5, 0.5]
raw_dataset_path = /home/ssd_storage/datasets/processed/1000_ids_num_changed/1000_ids_300_train_50_val_no_asians
dataset_name = mandy_faces
transforms_type = mtcnn
processed_dataset_root = /home/ssd_storage/datasets/processed
dataset_size_filter_dir = num_classes
phase_size_dict = {"train":300, "val": 50}
# num_ids = [200]
#missing 5 with 200 and 300
# num_i]ds = [2]
# num_pics = [5]
num_ids = [200,500,960]
num_pics = [1,5,10,20,50,100,200,300]
# num_ids = [200,500,1000]
# num_pics = [1,5,10,20,50,100,200,300]
# num_pics = [300]

# wanted: /home/administrator/experiments/all_ids/500_ids/500_ids_300_img_per_id_val_50
# curr: /home/hdd_storage/MR/results/all_small_ids/5_ids/small_ids_all_img_per_id_val_50_asian_5_ids_5_100_0/vgg16/models/119.pth, acc=0.8082735655737705, epoch=120


[MODELLING]
feature_parallelized_architectures = ["VGG", "vgg11", "vgg11_bn", "vgg13", "vgg13_bn", "vgg16", "vgg16_bn",
	"vgg19_bn", "vgg19", "AlexNet", "alexnet"]
architecture = vgg16
start_epoch = 120
end_epoch = 120
is_pretrained = False
num_classes = 4
criterion_name = CrossEntropyLoss
criterion_params = {}
batch_size = 128
workers = 4
performance_test = LFW_TEST
perf_threshold = 0.99
num_epochs_to_test = 120
num_batches_per_epoch_limit = 1000

[OPTIMIZING]
optimizer = SGD
optimizer_params = {
	"lr": 0.01,
	"momentum": 0.9,
	"weight_decay": 1e-4}
lr_scheduler = StepLR
lr_scheduler_params = {
	"step_size": 80,
	"gamma": 0.1}

[GENERAL]
num_experiments = 30
# root_dir = /home/ssd_storage/experiments/MR/results/all_ids/2_ids
#in order to make few ids folder - this is the base, and the root dir is base+id
#change ssd to hdd
## base_root_dir = /home/ssd_storage/experiments/MR/results/all_small_ids/
## root_dir = /home/ssd_storage/experiments/MR/results/all_small_ids/
# base_root_dir = /home/hdd_storage/MR/results/all_small_ids/
# root_dir = /home/hdd_storage/MR/results/all_small_ids/
base_root_dir = /home/hdd_storage/MR/results/asians/
root_dir = /home/hdd_storage/MR/results/asians/
# base_root_dir = /home/administrator/experiments/all_ids/
# root_dir = /home/administrator/experiments/all_ids/
#mlflow experiment name
# experiment_name = 500_ids_300_img_per_id_val_50
# experiment_name = 2_ids_300_img_per_id_val_50
# base_experiment_name = 2_ids_300_img_per_id_val_50
#large ids:
base_experiment_name = small_ids_no_asians
experiment_name = small_ids_no_asians
#small ids:


#inversion
id_folder = changes_while_run
#name of run (general for all index and images in one id)
run_name = asian_vggface_trained_
#csv path to write the dataset trained on (ids and images)
dataset_path = /home/ssd_storage/experiments/MR/vggtested/dataset_record


# [LFW_TEST]
# # labeled_pairs_path =/home/ssd_storage/datasets/MR/white_dataset/images_pairs_list/white_hv_all_pairs.txt
# #white:
# labeled_pairs_path = /home/ssd_storage/datasets/MR/vggface_test/images_pairs_list/upright_test_all_pairs_updated.txt
# #asian:
# # labeled_pairs_path = /home/ssd_storage/datasets/MR/vggface_test/asian_images_pairs_list/asian_upright_test_all_pairs.txt
# #  /home/ssd_storage/datasets/MR/Asian_face_dataset/images_pairs_lists/asian_hv_all_pairs
# reps_cache_path = ${GENERAL:root_dir}/${GENERAL:experiment_name}/lfw/reps/
# comparison_metric = l2
# # lfw_dir =/home/ssd_storage/datasets/MR/white_dataset/white_hv_dataset/white_hv_mtcnn_all_together
# #white:
# lfw_dir = /home/ssd_storage/datasets/MR/vggface_test/images_dataset
# #asian:
# # lfw_dir = /home/ssd_storage/datasets/MR/vggface_test/asian_images_dataset

# # /home/ssd_storage/datasets/MR/Asian_face_dataset/Asian_face_dataset/asian_hv_mtcnn_all_together
# output_filename=${GENERAL:experiment_name}_verification_results.csv
# # reps_results_path = /home/ssd_storage/experiments/MR/whites/results/vggfacetrained
# reps_results_path = /home/ssd_storage/experiments/MR/vggtested/results/asian/multi_run

[LFW_TEST]
# reps_layers=BlauchEquivalentExtractor
reps_layers=Fc78Dict
labeled_pairs_path=/home/administrator/experiments/familiarity/dataset/image_pairs_lists/mutualy_exclusive/pretraining_verification.txt
reps_cache_path=${GENERAL:root_dir}/${GENERAL:experiment_name}/lfw/reps/
comparison_metric=cos
lfw_dir=/home/administrator/experiments/familiarity/dataset/processed_pretraining_dataset/phase_perc_size/pretraining_fixed_{'train': 0.7, 'val': 0.2, 'test': 0.1}/test
reps_results_path=${GENERAL:root_dir}/${GENERAL:experiment_name}/${MODELLING:architecture}/results/mandy_run/
output_filename=verification_fc8.csv
# pretraining_verification_performance.csv


#in order to get the accuracy of model tested on inverted (and trained on upright), we want to make test on diff and same of only inverted images
# and another test of only upright images (two different configurations), and then get accuracys for each one, and compare (two graphs of accuracys
# or one graph with substractions of accuracys (upright-inverse)) 
# [REP_BEHAVIOUR]
# comparison_metric = l2
# reduce_performance = False
# output_filename =asian_ql_lfw_vggface_trained
# pairs_paths = {
# 	# "asian_diff_pairs": "/home/ssd_storage/datasets/MR/vggface_test/asian_images_pairs_list/asian_upright_test_diff_pairs.txt",
# 	# "asian_same_pairs": "/home/ssd_storage/datasets/MR/vggface_test/asian_images_pairs_list/asian_upright_test_same_pairs.txt"}
# 	"white_diff_pairs": "/home/ssd_storage/datasets/MR/vggface_test/images_pairs_list/upright_test_diff_pairs_updated.txt",
# 	"white_same_pairs": "/home/ssd_storage/datasets/MR/vggface_test/images_pairs_list/upright_test_same_pairs_updated.txt"}
	
# 	## "invert_diff_pairs": "/home/ssd_storage/datasets/MR/white_dataset/images_pairs_list/white_hv_diff_pairs.txt",
# 	## "invert_same_pairs": "/home/ssd_storage/datasets/MR/white_dataset/images_pairs_list/white_hv_same_pairs.txt"}
# 	##"asian_diff_pairs": "/home/ssd_storage/datasets/MR/white_dataset/images_pairs_list/white_hv_diff_pairs.txt",
# 	##"asian_same_pairs": "/home/ssd_storage/datasets/MR/white_dataset/images_pairs_list/white_hv_same_pairs.txt"}
# pairs_image_dirs = {
# 	# "asian_diff_pairs": "/home/ssd_storage/datasets/MR/vggface_test/asian_images_dataset",
# 	# "asian_same_pairs": "/home/ssd_storage/datasets/MR/vggface_test/asian_images_dataset"}
# 	"white_diff_pairs": "/home/ssd_storage/datasets/MR/vggface_test/images_dataset",
# 	"white_same_pairs": "/home/ssd_storage/datasets/MR/vggface_test/images_dataset"}
	
# 	## "invert_diff_pairs": "/home/ssd_storage/datasets/MR/white_dataset/white_hv_dataset/white_hv_mtcnn_all_together",
# 	## "invert_same_pairs": "/home/ssd_storage/datasets/MR/white_dataset/white_hv_dataset/white_hv_mtcnn_all_together"}
# 	##"asian_diff_pairs": "/home/ssd_storage/datasets/MR/white_dataset/white_hv_dataset/white_hv_mtcnn_all_together",
# 	##"asian_same_pairs": "/home/ssd_storage/datasets/MR/white_dataset/white_hv_dataset/white_hv_mtcnn_all_together"}

# reps_cache_path = ${GENERAL:root_dir}/${GENERAL:experiment_name}/pairs/reps/

# # reps_results_path = ${GENERAL:root_dir}/${GENERAL:experiment_name}/${MODELLING:architecture}/results/
# # reps_results_path = /home/ssd_storage/experiments/MR/whites/results/vggfacetrained
# reps_results_path = /home/ssd_storage/experiments/MR/vggtested/results/asian/multi_run
# reps_layers = BlauchEquivalentExtractor

[REP_BEHAVIOUR]
dist_mat=True
reps_layers=BlauchEquivalentExtractor
datasets = {
                "mat_dom": "/home/ssd_storage/datasets/dp_sr_comparison/dp_sr_images_MTCNN/"
                
            }
            # "mat_dom": "/home/ssd_storage/datasets/dp_sr_comparison/dp_sr_images_MTCNN/'matt and domonic jpg'",
            #     "omer_eyal": "/home/ssd_storage/datasets/dp_sr_comparison/dp_sr_images_MTCNN/'matt and domonic jpeg'",
            #     "tamar_marina": "/home/ssd_storage/datasets/dp_sr_comparison/dp_sr_images_MTCNN/'matt and domonic jpeg'",
            #     "tazmin_tess": "/home/ssd_storage/datasets/dp_sr_comparison/dp_sr_images_MTCNN/'matt and domonic jpeg'"
comparison_metric=cos
output_filename=dist_mat
reps_cache_path=${GENERAL:root_dir}/${GENERAL:experiment_name}/pairs/reps/mandy_run/
reps_results_path=${GENERAL:root_dir}/${GENERAL:experiment_name}/${MODELLING:architecture}/results/mandy_run/
# /home/ssd_storage/experiments/dp_sr/vgg16/results/


