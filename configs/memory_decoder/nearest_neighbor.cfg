[DATASET]
filters=["phase_perc_size"]
image_size = 256
net_input_size = 224
transforms_type = mtcnn
dataset_means = [0.5, 0.5, 0.5]
dataset_stds = [0.5, 0.5, 0.5]
# set this dir to the dataset dir
raw_dataset_path = /home/ssd_storage/datasets/Cognitive_exp/adva_celeb_finetune_mtcnn/images_for_finetuning
crop_scale={"max": 1.0, "min": 1.0}
processed_dataset_root = /home/ssd_storage/datasets/processed
class_filter_dataset_dir = phase_perc_size
dataset_name = adva_familiar
phase_size_dict = {"train": 0.75, "val": 0.25}

[GENERAL]
root_dir = /home/ssd_storage/experiments
#change to name of experiment (the output folder will be created accordingly)
experiment_name = mem+prototype_evaluate
run_name = nearest_neighbor

[MODELLING]
feature_parallelized_architectures = ["VGG", "vgg11", "vgg11_bn", "vgg13", "vgg13_bn", "vgg16", "vgg16_bn",
    "vgg19_bn", "vgg19", "AlexNet", "alexnet"]
architecture = vgg16
# If you want to start from the middle of training, set this to the epoch you wish to start from (it will load start_epoch-1 from the dir)
start_epoch = 0
end_epoch = 0
is_pretrained = False
num_classes = 8749
criterion_name = CrossEntropyLoss
criterion_params = {}
batch_size=1
workers=4
performance_test=LFW_TEST
perf_threshold=1.0
#each #num_epochs_to_test we make a LFW test
num_epochs_to_test=10
num_batches_per_epoch_limit=1000
logs_path=${GENERAL:root_dir}/${GENERAL:experiment_name}/${MODELLING:architecture}/results/
checkpoint_path=/home/administrator/experiments/familiarity/pretraining/vgg16/models/119.pth

[OPTIMIZING]
optimizer = Adam
optimizer_params = {
    "lr": 1e-5}
lr_scheduler = ReduceLROnPlateau
lr_scheduler_params = {
    "factor": 0.1}

[REP_BEHAVIOUR]
reps_cache_path=${GENERAL:root_dir}/${GENERAL:experiment_name}/pairs/reps/
reps_results_path=${GENERAL:root_dir}/${GENERAL:experiment_name}/${MODELLING:architecture}/results/
output_filename=nearest_neighbor_dists
workers=4
reps_layers=fc7
comparison_metric=cos
pairs_paths = {
                "neighbors": "/home/administrator/PycharmProjects/libi/facial_feature_impact_comparison/configs/memory_decoder/nearest_neighbor_pairs.csv"
                }
pairs_image_dirs = {
                "neighbors": "/home/ssd_storage"
                }