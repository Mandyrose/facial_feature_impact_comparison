[DATASET]
filters=["phase_size"]
image_size = 256
net_input_size = 224
dataset_means = [0.485, 0.456, 0.406]
dataset_stds = [0.229, 0.224, 0.225]
; raw_dataset_path = /home/administrator/datasets/images_faces/images_only
raw_dataset_path = /home/hdd_storage/imagenet/train
dataset_name = objects_imagenet
transforms_type = random_resize
phase_size_dict = {"train":300, "val": 50, "test":50}
crop_scale={"max": 1.0, "min": 1.0}
processed_dataset_root = /home/ssd_storage/datasets/
class_filter_dataset_dir = phase_size

[MODELLING]
feature_parallelized_architectures = ["VGG", "vgg11", "vgg11_bn", "vgg13", "vgg13_bn", "vgg16", "vgg16_bn",
    "vgg19_bn", "vgg19", "AlexNet", "alexnet"]
architecture = vgg16
# If you want to start from the middle of training, set this to the epoch you wish to start from (it will load start_epoch-1 from the dir)
start_epoch = 0
end_epoch = 0
is_pretrained = False
num_classes = 1000
criterion_name = CrossEntropyLoss
criterion_params = {}
#128
batch_size=1
workers=4
performance_test=LFW_TEST
; performance_test=None
perf_threshold=0.99
#each #num_epochs_to_test we make a LFW test
num_epochs_to_test=10
num_batches_per_epoch_limit=1000
logs_path=${GENERAL:root_dir}/${GENERAL:experiment_name}/${MODELLING:architecture}/results/
; checkpoint_path=${GENERAL:root_dir}/${GENERAL:experiment_name}/${MODELLING:architecture}/models/149.pth
checkpoint_path = /home/hdd_storage/mlflow/artifact_store/objects_net/75b89fecf07f441a9ec2be5c6f5204c3/artifacts/119.pth

[OPTIMIZING]
optimizer = SGD
optimizer_params = {
    "lr": 0.01,
    "momentum": 0.9,
    "weight_decay": 5e-4}
lr_scheduler = StepLR
lr_scheduler_params = {
;     "initial_lr": 0.01,
    "step_size": 80,
    "gamma": 0.1}

[GENERAL]
root_dir = /home/ssd_storage/experiments/win_lose
#change to name of experiment (the output folder will be created accordingly)
experiment_name = win_lose_1000_object_net
run_name = 1000_object_net

[LFW_TEST]
reps_layers=Fc78Dict
labeled_pairs_path=./lfw_test_pairs.txt
reps_cache_path=${GENERAL:root_dir}/${GENERAL:experiment_name}/lfw/reps/
reps_results_path=${GENERAL:root_dir}/${GENERAL:experiment_name}/${MODELLING:architecture}/results/
output_filename=lfw_results
comparison_metric=cos
#l2/cos
lfw_dir=/home/administrator/datasets/lfw-align-128

[REP_BEHAVIOUR]
dist_mat=True
reps_layers=BlauchEquivalentExtractor
datasets = {
                "win_lose": "/home/ssd_storage/datasets/win_lose_study/win_lose_full_with_aligned"
            }
comparison_metric=cos
output_filename=dist_mat
reps_cache_path=${GENERAL:root_dir}/${GENERAL:experiment_name}/pairs/reps/
reps_results_path=${GENERAL:root_dir}/${GENERAL:experiment_name}/${MODELLING:architecture}/results/